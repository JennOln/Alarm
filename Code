#include <EEPROM.h>
#include <LiquidCrystal_I2C.h>
#include <Keypad.h>
#include <WiFi.h>
#include <HTTPClient.h> // nos permite hacer peticiones http
// static const char *ssid = "RDC-SOON";
// static const char *passwordIoT = "2030SAXL25";
const char *ssid = "RED JALISCO PRIVADA";
const char *passwordIoT = "RedJalisco";
// Url's para hacer las peticiones
String example = "http://10.149.73.213/";
// const char* example2 = "http://example.com/sensor1";
String recibir = "http://10.149.73.213/datos.php?action=5&ncontrol=ch18031192&label=red"; // Dato que voy a recibir
String sendData1 = "http://10.149.73.213/datos.php?action=3&ncontrol=ch18031192&label="; // Enviar datos
String sendData2 = "http://10.149.73.213/datos.php?action=3&ncontrol=ch18031192&label="; // Enviar datos
String sendData3 = "http://10.149.73.213/datos.php?action=3&ncontrol=ch18031192&label="; // Enviar datos
String sendData4 = "http://10.149.73.213/datos.php?action=3&ncontrol=ch18031192&label="; // Enviar datos
String sendData5 = "http://10.149.73.213/datos.php?action=3&ncontrol=ch18031192&label="; // Enviar datos
String sendData6 = "http://10.149.73.213/datos.php?action=3&ncontrol=ch18031192&label="; // Enviar datos
String sendData7 = "http://10.149.73.213/datos.php?action=3&ncontrol=ch18031192&label="; // Enviar datos
String sendData8 = "http://10.149.73.213/datos.php?action=3&ncontrol=ch18031192&label=";
// const char* usingIP = "http://192.168.4.1/";
String answer; // estado de alarma
String answer2; // estado del sensor M2
String answer3; // Estado de sensor IR1
String answer4; // Estado de sensor M3
String answer5; // Estado de sensor IR2
String answer6; // Estado de sensor M1
String answer7; // Estao de sensor M4
String answer8; // Estao de sensor M4
const int requestInterval = 7000; // 7s
LiquidCrystal_I2C lcd(0x27, 16, 2);
// Definir pines
#define buzzer 4
#define sensorMagnetico1 19
#define sensorMagnetico2 18
#define sensorMagnetico3 5
#define sensorMagnetico4 36
#define sensorInfrarrojo1 34
#define sensorInfrarrojo2 35
#define led 15
// Definir valores del contador cuando la puerta se habra
int a = 15; // 30 900
volatile unsigned long tiempo2 = 0;
volatile unsigned long tiempo1 = 0;
volatile unsigned tiempoMillis = 0;
unsigned long s = 0;
unsigned long se;
int contador = 0;
int flag = 0;
volatile unsigned timered = 0;
uint8_t recibido = 0, obtenido = 0;
bool recibi = false;
//------------> variables puestas por sato <-----------------
bool posSendData = true;
//-----------------------------------------------------------
// Definir simbolos y botones del keypad
const byte ROWS = 4; // 4 filas
const byte COLS = 4; // 4 columnas
char keypressed;
char keyMap[ROWS][COLS] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};
byte rowPins[ROWS] = {13, 12, 14, 27};
byte colPins[COLS] = {26, 25, 33, 32};
Keypad myKeypad = Keypad(makeKeymap(keyMap), rowPins, colPins, ROWS, COLS);
// lectura de los sensores magneticos
uint8_t sensorM1 = 0; // Puerta principal
uint8_t sensorM2 = 0; // ventana 1 (abierto/cerrada)
uint8_t sensorM3 = 0; // ventana 2 (abierto/cerrada)
uint8_t sensorM4 = 0; // Puerta cochera
// Lectura de los sensores infrarrojos
float sensorIR1 = 0; // Ventana 1 Rota
float sensorIR2 = 0; // Ventana 2 Rota
// Alarma - Sirena
int Alarm = 0; // Estado dela sirena
// definir variables para alarma
long duration;
int distance, initialDistance, currentDistance, i;
int screenOffMsg = 0;
String password = "2996";
String tempPassword;
boolean activated = 0; // True / False; // estado de la alarma
boolean isActivated;
boolean alarmActivated = false;
boolean enteredPassword; // estado de la contraseña ingresada para detener la ala
boolean passChangeMode = false;
boolean passChanged = false;
// ESTADO DE LA PUERTA Y ALARMA
bool est = false;
bool puerta = false;
void setup()
{
  Serial.begin(9600); // Se inicia el serial
  lcd.init();
  lcd.backlight();
  // nos conectamos a la red
  WiFi.begin(ssid, passwordIoT);
  Serial.println("Connecting");
  while (WiFi.status() != WL_CONNECTED)
  {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.print("Conectado a la red con la IP: ");
  Serial.println(WiFi.localIP());
  Serial.println();
  tiempo1 = millis();
  /* //Se inicia correctamente la pantalla lcd
    lcd.setCursor(4, 0);
    lcd.print("LCD Test");
  */
  pinMode(sensorMagnetico1, INPUT_PULLUP);
  pinMode(sensorMagnetico2, INPUT_PULLUP);
  pinMode(sensorMagnetico3, INPUT_PULLUP);
  // pinMode(sensorMagnetico4, INPUT_PULLUP);
  pinMode(sensorInfrarrojo1, INPUT_PULLUP);
  pinMode(sensorInfrarrojo2, INPUT_PULLUP);
  pinMode(led, OUTPUT);
  pinMode(buzzer, OUTPUT);
}
void loop()
{
  if (WiFi.status() == WL_CONNECTED)
  {
    sendData = sendData + "activated&valor=" + (String)activated;
    answer = getRequest(sendData);
    tiempoMillis = millis();
    if ((tiempoMillis - timered) >= 1000)
    {
      answer = getRequest(recibir); // recibir lod datos de emmanuel
      Serial.print("\n\nRespuesta de duckduckgo.com: ");
      Serial.print(answer); // puro numero para manipularlo
      Serial.print(" ");
      recibido = answer.toInt();
      Serial.println(recibido);
      timered = tiempoMillis;
    }
    if (recibido == 1 && recibi == true)
    {
      obtenido = recibido;
      recibi = false;
    }
    if (recibido == 0 && recibi == false)
    {
      obtenido = recibido;
      recibi = true;
    }
    Serial.print("Alarma = ");
    Serial.print(activated);
    // PUERTA PRINCIPAL
    sensorM1 = digitalRead(sensorMagnetico1);
    Serial.print(" Puerta =");
    Serial.print(sensorM1);
    // VENTANA 1 ---- ABIERTA / CERRADA
    sensorM2 = digitalRead(sensorMagnetico2);
    Serial.print(" Ventana 1 =");
    Serial.print(sensorM2);
    // VENTANA 1 ROTA ---- INTRUSO
    sensorIR1 = analogRead(sensorInfrarrojo1);
    Serial.print(" Ventana1 Rota =");
    Serial.print(sensorIR1);
    // VENTANA 2 ---- ABIERTA / CERRADA
    sensorM3 = digitalRead(sensorMagnetico3);
    Serial.print(" Ventana 2 =");
    Serial.print(sensorM3);
    delay(500);
    // VENTANA 2 ROTA ---- INTRUSO
    sensorIR2 = analogRead(sensorInfrarrojo2);
    Serial.print(" Ventana2 Rota =");
    Serial.print(sensorIR2);
    // PUERTA COCHERA
    sensorM4 = digitalRead(sensorMagnetico4);
    Serial.print(" Puerta de la cochera ");
    Serial.println(sensorM4);
    sendDataWIFI();
    //----- SI ESTA ACTIVA LA ALARMA
    if (alarmActivated == true)
    {
      digitalWrite(led, HIGH);
      digitalWrite(buzzer, LOW);
      Alarm = 0;
      activated = 1;
      Serial.println(Alarm);
      //--------------------SI ALGUNA VENTANA SE ABRE--------------------//
      if (sensorM2 == 1 || sensorM3 == 1 || sensorIR2 > 0 || sensorIR1 > 0)
      { // Si algun sensor magnetico da valor d
        Alarm = 1;
        Serial.println(Alarm);
        lcd.clear();
        enterPassword();
      }
      //--------------------SI LA PUERTA SE ABRE-------------------------//
      if (sensorM1 == 1 && flag == 0 || sensorM4 == 1 && flag == 0) // Si la puerta principal o puerta de cochera se abre
      {
        activated = 1; // activated = true;
        digitalWrite(buzzer, LOW);
        Alarm = 0;
        Serial.print("Alarma=");
        Serial.print(Alarm);
        tiempo2 = millis();
        s = millis();
        Serial.print(" Segundo");
        Serial.print(" ");
        se = s / 1000;
        Serial.print(se);
        Serial.println(" contador:");
        Serial.println(" ");
        writePass(); // INGRESAR CONTRASEÑA ANTES DE QUE SE ACTIVE LA SIRENA
      }
      if (sensorM1 == 0)
      {
        // activated = 0; //activated = false;
      }
    }
    //------------------------MENÚ DEL SISTEMA DE ALARMA-------------------------//
    if (!alarmActivated)
    {
      digitalWrite(led, LOW);
      digitalWrite(buzzer, LOW);
      Alarm = 0;
      if (screenOffMsg == 0)
      {
        lcd.clear();
        lcd.setCursor(0, 0);
        lcd.print("A Activar");
        lcd.setCursor(0, 1);
        lcd.print("B Cambiar clave");
        digitalWrite(buzzer, LOW);
        Alarm = 0;
        activated = 0;
        screenOffMsg = 1;
      }
      //-------------SI SE PRESIONA A ALARMA ACTIVADA------------
      keypressed = myKeypad.getKey();
      if (keypressed == 'A' || obtenido == 1)
      {
        digitalWrite(buzzer, LOW);
        Alarm = 0;
        // activated = 1;
        activateAlarm();
      }
      //--------------------------CAMBIAR LA CONTRASEÑA----------------------------
      //---GUARDAR LA NUEVA CONTRASEÑA EN LA EEPROM PARA QUE SE QUEDE COMO PREDETER
      else if (keypressed == 'B')
      {
        lcd.clear();
        int i = 1;
        digitalWrite(buzzer, LOW);
        Alarm = 0;
        tempPassword = "";
        lcd.setCursor(0, 0);
        lcd.print("Clave actual");
        lcd.setCursor(0, 1);
        lcd.print(">");
        passChangeMode = true;
        passChanged = true;
        while (passChanged)
        {
          keypressed = myKeypad.getKey();
          if (keypressed != NO_KEY)
          {
            if (keypressed == '0' || keypressed == '1' || keypressed == '2' || keypressed == '4' || keypressed == '5' || keypressed == '6' ||
                keypressed == '8' || keypressed == '9')
            {
              tempPassword += keypressed;
              lcd.setCursor(i, 1);
              lcd.print("*");
              i++;
            }
          }
          if (i > 5 || keypressed == '#')
          {
            tempPassword = "";
            i = 1;
            lcd.clear();
            lcd.setCursor(0, 0);
            lcd.print("Clave actual");
            lcd.setCursor(0, 1);
            lcd.print(">");
          }
          if (keypressed == 'D')
          {
            i = 1;
            digitalWrite(buzzer, LOW);
            Alarm = 1;
            if (password == tempPassword)
            {
              tempPassword = "";
              lcd.clear();
              lcd.setCursor(0, 0);
              lcd.print("Cambiar clave");
              lcd.setCursor(0, 1);
              lcd.print(">");
              while (passChangeMode)
              {
                keypressed = myKeypad.getKey();
                if (keypressed != NO_KEY)
                {
                  if (keypressed == '0' || keypressed == '1' || keypressed == '2' | keypressed == '4' || keypressed == '5' || keypressed == '6' |
                      keypressed == '8' || keypressed == '9')
                  {
                    tempPassword += keypressed;
                    lcd.setCursor(i, 1);
                    lcd.print("*");
                    i++;
                    digitalWrite(buzzer, LOW);
                    Alarm = 1;
                  }
                }
                if (i > 5 || keypressed == '#')
                {
                  tempPassword = "";
                  i = 1;
                  digitalWrite(buzzer, LOW);
                  Alarm = 1;
                  lcd.clear();
                  lcd.setCursor(0, 0);
                  lcd.print("Cambiar clave");
                  lcd.setCursor(0, 1);
                  lcd.print(">");
                }
                if (keypressed == 'D')
                {
                  i = 1;
                  digitalWrite(buzzer, LOW);
                  Alarm = 1;
                  password = tempPassword;
                  EEPROM.write(1, 100);
                  passChangeMode = false;
                  passChanged = false;
                  screenOffMsg = 0;
                }
              }
            }
          }
        }
      }
    }
  }
}
//----------CONTADOR AL ACTIVAR LA ALARMA------------------/
void activateAlarm()
{
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Alarma activa");
  lcd.setCursor(0, 1);
  lcd.print(" en...");
  int countdown = 9; // 9 segundos para que se active la alarma
  while (countdown != 0)
  {
    lcd.setCursor(13, 1);
    lcd.print(countdown);
    countdown--;
    digitalWrite(buzzer, LOW);
    Alarm = 0;
    activated = 1;
    delay(500);
    digitalWrite(led, HIGH);
    delay(500);
    digitalWrite(led, LOW);
  }
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Alarma activada");
  alarmActivated = true;
  digitalWrite(buzzer, LOW);
  Alarm = 0;
}
//------------------INGRESAR LA CONTRASEÑA PARA DESACTIVAR LA ALARMA Y LA SIRENAvoid enterPassword()
{
  int k = 5;
  Alarm = 1;
  tempPassword = "";
  activated = true;
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print(" * ALARMA * ");
  lcd.setCursor(0, 1);
  lcd.print("Clave>");
  digitalWrite(buzzer, HIGH);
  Alarm = 1;
  while (activated)
  {
    // Serial.println("SIRENA ACTIVADA");
    digitalWrite(buzzer, HIGH);
    Alarm = 1;
    keypressed = myKeypad.getKey();
    if (keypressed != NO_KEY)
    {
      if (keypressed == '0' || keypressed == '1' || keypressed == '2' || keypressed == '4' || keypressed == '5' || keypressed == '6' ||
          keypressed == '8' || keypressed == '9')
      {
        tempPassword += keypressed;
        lcd.setCursor(k, 1);
        lcd.print("*");
        k++;
      }
    }
    if (k > 9 || keypressed == '#')
    {
      tempPassword = "";
      k = 5;
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print(" * ALARMA * ");
      lcd.setCursor(0, 1);
      lcd.print("Clave>");
      digitalWrite(buzzer, HIGH);
      Alarm = 1;
    }
    if (keypressed == 'D')
    {
      if (tempPassword == password)
      {
        activated = false;
        activated = 0;
        alarmActivated = false;
        digitalWrite(buzzer, LOW);
        Alarm = 0;
        screenOffMsg = 0;
        // obtenido = 0;
        // recibi = false;
        // regresar la bandera a 0
        flag = 0;
      }
      else if (tempPassword != password)
      {
        lcd.setCursor(0, 1);
        lcd.print("Error!");
        delay(2000);
        lcd.clear();
        digitalWrite(buzzer, HIGH);
        Alarm = 1;
        lcd.setCursor(0, 0);
        lcd.print(" * ALARMA * ");
        lcd.setCursor(0, 1);
        lcd.print("Clave> ");
      }
    }
  }
}
//--------------------DESACTIVAS ALARMA ANTES 15 SEG O ACTIVA SIRENA-------------
void writePass()
{
  int k = 5;
  tempPassword = "";
  // activated = true;
  // lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print(" PUERTA ABIERTA ");
  lcd.setCursor(0, 1);
  lcd.print("Clave>");
  while (activated)
  {
    keypressed = myKeypad.getKey();
    Serial.print(contador);
    // Serial.println(" Alarma");
    if (keypressed != NO_KEY)
    {
      if (keypressed == '0' || keypressed == '1' || keypressed == '2' || keypressed == '4' || keypressed == '5' || keypressed == '6' ||
          keypressed == '8' || keypressed == '9')
      {
        tempPassword += keypressed;
        Serial.println(tempPassword);
        lcd.setCursor(k, 1);
        lcd.print("*");
        k++;
      }
    }
    tiempo2 = millis();
    if ((((tiempo2 - tiempo1) >= 1000)) && (contador < a))
    {
      contador++;
      Serial.println(contador);
      tiempo1 = tiempo2;
      if (contador >= a)
      {
        Alarm = 0;
        // Serial.println("FUERA..");
        // delay(5000);
        contador = 0;
        flag = 1;
        activated = false;
        enterPassword();
      }
    }
    if (k > 9 || keypressed == '#')
    {
      tempPassword = "";
      k = 5;
      lcd.clear();
      digitalWrite(buzzer, LOW);
      Alarm = 0;
      lcd.setCursor(0, 0);
      lcd.print(" PUERTA ABIERTA ");
      lcd.setCursor(0, 1);
      lcd.print("Clave>");
    }
    if (keypressed == 'D')
    {
      if (tempPassword == password)
      {
        activated = false;
        activated = 0;
        alarmActivated = false;
        digitalWrite(buzzer, LOW);
        Alarm = 0;
        // recibi = false;
        // obtenido = 0;
        screenOffMsg = 0;
      }
      else if (tempPassword != password)
      {
        lcd.setCursor(0, 1);
        lcd.print("Error!");
        digitalWrite(buzzer, HIGH);
        Alarm = 1;
        delay(2000);
        lcd.clear();
        lcd.setCursor(0, 0);
        lcd.print(" * ALARMA * ");
        lcd.setCursor(0, 1);
        lcd.print("Clave> ");
      }
    }
  }
}
String getRequest(String serverName)
{
  HTTPClient http;
  http.begin(serverName);
  // Enviamos peticion HTTP
  int httpResponseCode = http.GET();
  String payload = "...";
  if (httpResponseCode > 0)
  {
    Serial.print("HTTP Response code: ");
    Serial.println(httpResponseCode);
    payload = http.getString();
  }
  else
  {
    Serial.print("Error code: ");
    Serial.println(httpResponseCode);
  }
  // liberamos
  http.end();
  return payload;
}
void sendDataWIFI()
{
  if (activated == 0 && posSendData == true)
  { // si la alarma está desactivada
    // Enviar estado de la alarma
    sendData1 = sendData1 + "activated&valor=" + (String)activated;
    answer = getRequest(sendData1);
    if (sensorM2 == 0)
    {
      sendData2 = sendData2 + "sensorM2&valor=" + (String)sensorM2;
      answer2 = getRequest(sendData2);
      delay(100);
      posSendData = false;
    }
    if (sensorIR1 == 0)
    {
      sendData3 = sendData3 + "sensorIR1&valor=" + (String)sensorIR1;
      answer3 = getRequest(sendData3);
      delay(100);
      posSendData = false;
    }
    if (sensorM3 == 0)
    {
      sendData4 = sendData4 + "sensorM3&valor=" + (String)sensorM3;
      answer4 = getRequest(sendData4);
      delay(100);
      posSendData = false;
    }
    if (sensorIR2 == 0)
    {
      sendData5 = sendData5 + "sensorIR2&valor=" + (String)sensorIR2;
      answer5 = getRequest(sendData5);
      delay(100);
      posSendData = false;
    }
    if (sensorM1 == 0)
    {
      sendData6 = sendData6 + "sensorM1&valor=" + (String)sensorM1;
      answer6 = getRequest(sendData6);
      delay(100);
      posSendData = false;
    }
    if (sensorM4 == 0)
    {
      sendData7 = sendData7 + "sensorM4&valor=" + (String)sensorM4;
      answer7 = getRequest(sendData7);
      delay(100);
      posSendData = false;
    }
    // posSendData = false;
    delay(100);
  }
  else if (activated == 1 && posSendData == false)
  { // Si alarma está activa enviar datos
    sendData1 = sendData1 + "activated&valor=" + (String)activated;
    answer = getRequest(sendData1);
    delay(100);
    obtenido = 0;
    sendData8 = sendData8 + "red&valor=" + (String)obtenido;
    answer = getRequest(sendData8);
    delay(100);
    if (sensorM2 == 1)
    {
      sendData2 = sendData2 + "sensorM2&valor=" + (String)sensorM2;
      answer2 = getRequest(sendData2);
      delay(100);
      posSendData = true;
    }
    if (sensorIR1 == 1)
    {
      sendData3 = sendData3 + "sensorIR1&valor=" + (String)sensorIR1;
      answer3 = getRequest(sendData3);
      delay(100);
      posSendData = true;
    }
    if (sensorM3 == 1)
    {
      sendData4 = sendData4 + "sensorM3&valor=" + (String)sensorM3;
      answer4 = getRequest(sendData4);
      delay(100);
      posSendData = true;
    }
    if (sensorIR2 == 1)
    {
      sendData5 = sendData5 + "sensorIR2&valor=" + (String)sensorIR2;
      answer5 = getRequest(sendData5);
      delay(100);
      posSendData = true;
    }
    if (sensorM1 == 1 && activated == true)
    {
      sendData6 = sendData6 + "sensorM1&valor=" + (String)sensorM1;
      answer6 = getRequest(sendData6);
      delay(100);
      posSendData = true;
    }
    if (sensorM4 == 1)
    {
      sendData7 = sendData7 + "sensorM4&valor=" + (String)sensorM4;
      answer7 = getRequest(sendData7);
      delay(100);
      posSendData = true;
    }
    Serial.println("WIFI");
    // posSendData = true;
  }
}

